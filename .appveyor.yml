version: {build}

branches:
  only:
    - waf_build

environment:
  pcre2: "10.21"
  ssl: "2.5.0"
  matrix:
  - llvm: "3.9.0"

configuration:
  - Release

install:
  - ps: |
      $config = $env:configuration
      $pcre2 = $env:pcre2
      $ssl = $env:ssl
      $llvm = $env:llvm

      $workingDir = Convert-Path "."
      $srcDir = "$workingDir\src"
      $libDir = "$workingDir\lib"

      if (-not (Test-Path $srcDir)) { mkdir $srcDir }
      if (-not (Test-Path $libDir)) { mkdir $libDir }

      # LLVM
      $llvmLibDir = "${libDir}\LLVM-${llvm}"

      if (-not (Test-Path $llvmLibDir))
      {
        $llvmSrc = "${srcDir}\llvm-${llvm}.src"
        $llvmBuild = "${srcDir}\llvm-${llvm}.build"

        if (-not (Test-Path $llvmSrc))
        {
          Write-Output "Obtaining LLVM $llvm"
          $llvmTar = "${srcDir}\LLVM-${llvm}.tar"
          $llvmZip = "$llvmTar.xz"
          if (-not (Test-Path $llvmZip)) { wget "http://llvm.org/releases/${llvm}/llvm-${llvm}.src.tar.xz" -OutFile $llvmZip }
          7z x $llvmZip "-o$srcDir"
          7z x $llvmTar "-o$srcDir"
        }

        Write-Output "Building LLVM $llvm"
        if (-not (Test-Path $llvmBuild)) { mkdir $llvmBuild }
        cd $llvmBuild
        cmake $llvmSrc -G "Visual Studio 14 2015 Win64" -DCMAKE_INSTALL_PREFIX="${llvmLibDir}" -DCMAKE_BUILD_TYPE="$config"
        cmake --build . --target install --config "$config"
      }

      cd $workingDir

      # LibreSSL
      $sslLibDir = "${libDir}\libressl-${ssl}-windows"

      if (-not (Test-Path $sslLibDir))
      {
        Write-Output "Obtaining LibreSSL $ssl"
        $sslZip = "${srcDir}\libressl-${ssl}-windows-zip"
        if (-not (Test-Path $sslZip)) { wget "http://ftp.openbsd.org/pub/OpenBSD/LibreSSL/libressl-${ssl}-windows.zip" -OutFile $sslZip }
        unzip -o $sslZip -d $libDir
      }

      cd $workingDir

      # PCRE2
      $pcreLibDir = "${libDir}\pcre2-${pcre2}"

      if (-not (Test-Path $pcreLibDir))
      {
        $pcreSrc = "${srcDir}\pcre2-${pcre2}"
        $pcreBuild = "${srcDir}\pcre2-${pcre2}.build"

        if (-not (Test-Path $pcreSrc))
        {
          Write-Output "Obtaining PCRE2 ${pcre2}"
          $pcreZip = "${srcDir}\pcre2-${pcre2}.zip"
          if (-not (Test-Path $pcreZip)) { wget "ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre2-${pcre2}.zip" -OutFile $pcreZip }
          unzip -o $pcreZip -d $srcDir
        }

        Write-Output "Building PCRE2"
        if (-not (Test-Path $pcreBuild)) { mkdir $pcreBuild }
        cd $pcreBuild
        cmake $pcreSrc -G "Visual Studio 14 2015 Win64"
        cmake --build . --target pcre2-8 --config "$config"

        mkdir $pcreLibDir
        copy Release\pcre2-8.lib $pcreLibDir
      }

      cd $workingDir

      $ponyWinLibs = "PonyWindowsLibs-LLVM-${llvm}-LibreSSL-${ssl}-PCRE2-${pcre2}.zip"
      7z a -tzip $ponyWinLibs $libDir

artifacts:
  - path: 'PonyWindowsLibs*.zip'
